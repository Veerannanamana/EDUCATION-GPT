{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\AI_BOT\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport './chatStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat({\n  onLogout\n}) {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const chatRef = useRef(null);\n  const sendMessage = () => {\n    if (!message.trim()) return;\n    const newMessage = {\n      from: \"user\",\n      text: message\n    };\n    setMessages(prev => [...prev, newMessage]);\n    fetch(\"http://localhost:5000/chat\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        message\n      }),\n      credentials: \"include\"\n    }).then(res => res.json()).then(data => {\n      if (data.error) {\n        setMessages(prev => [...prev, {\n          from: \"bot\",\n          text: data.error\n        }]);\n      } else {\n        setMessages(prev => [...prev, {\n          from: \"bot\",\n          text: data.reply\n        }]);\n      }\n    }).catch(err => {\n      setMessages(prev => [...prev, {\n        from: \"bot\",\n        text: \"Network error\"\n      }]);\n    });\n    setMessage(\"\");\n  };\n  useEffect(() => {\n    if (chatRef.current) {\n      chatRef.current.scrollTop = chatRef.current.scrollHeight;\n    }\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"AI Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uD83D\\uDE0A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: onLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-box\",\n          ref: chatRef,\n          children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.from === \"user\" ? \"sent\" : \"received\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [msg.from === \"user\" ? \"You\" : \"Bot\", \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-text\",\n              children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                remarkPlugins: [remarkGfm],\n                children: msg.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            placeholder: \"Type a message...\",\n            onKeyPress: e => {\n              if (e.key === 'Enter') sendMessage();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"SESsZVXLKoL5uRpsgzMrEUBwF6g=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ReactMarkdown","remarkGfm","jsxDEV","_jsxDEV","Chat","onLogout","_s","message","setMessage","messages","setMessages","chatRef","sendMessage","trim","newMessage","from","text","prev","fetch","method","headers","body","JSON","stringify","credentials","then","res","json","data","error","reply","catch","err","current","scrollTop","scrollHeight","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","map","msg","index","remarkPlugins","type","value","onChange","e","target","placeholder","onKeyPress","key","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/AI_BOT/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport remarkGfm from 'remark-gfm';\r\nimport './chatStyles.css';\r\n\r\nfunction Chat({ onLogout }) {\r\n    const [message, setMessage] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n    const chatRef = useRef(null);\r\n\r\n    const sendMessage = () => {\r\n        if (!message.trim()) return;\r\n\r\n        const newMessage = { from: \"user\", text: message };\r\n        setMessages(prev => [...prev, newMessage]);\r\n\r\n        fetch(\"http://localhost:5000/chat\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ message }),\r\n            credentials: \"include\"\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.error) {\r\n                setMessages(prev => [...prev, { from: \"bot\", text: data.error }]);\r\n            } else {\r\n                setMessages(prev => [...prev, { from: \"bot\", text: data.reply }]);\r\n            }\r\n        })\r\n        .catch(err => {\r\n            setMessages(prev => [...prev, { from: \"bot\", text: \"Network error\" }]);\r\n        });\r\n\r\n        setMessage(\"\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (chatRef.current) {\r\n            chatRef.current.scrollTop = chatRef.current.scrollHeight;\r\n        }\r\n    }, [messages]);\r\n\r\n    return (\r\n        <div className=\"chat-main-container\">\r\n            <div className=\"sidebar\">\r\n                <h2>AI Chat</h2>\r\n                <div className=\"profile\">\r\n                    <p>ðŸ˜Š</p>\r\n                    <span>User</span>\r\n                </div>\r\n                <button className=\"logout-btn\" onClick={onLogout}>Logout</button>\r\n            </div>\r\n\r\n            <div className=\"center-container\">\r\n                <div className=\"chat-container\">\r\n                    <div className=\"chat-box\" ref={chatRef}>\r\n                        {messages.map((msg, index) => (\r\n                            <div key={index} className={`message ${msg.from === \"user\" ? \"sent\" : \"received\"}`}>\r\n                                <strong>{msg.from === \"user\" ? \"You\" : \"Bot\"}:</strong>\r\n                                <div className=\"message-text\">\r\n                                    <ReactMarkdown remarkPlugins={[remarkGfm]}>\r\n                                        {msg.text}\r\n                                    </ReactMarkdown>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"chat-input\">\r\n                        <input\r\n                            type=\"text\"\r\n                            value={message}\r\n                            onChange={(e) => setMessage(e.target.value)}\r\n                            placeholder=\"Type a message...\"\r\n                            onKeyPress={(e) => { if (e.key === 'Enter') sendMessage(); }}\r\n                        />\r\n                        <button onClick={sendMessage}>Send</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}